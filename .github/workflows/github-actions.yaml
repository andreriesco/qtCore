name: Github actions
'on':
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
jobs:
  build:
    timeout-minutes: 360
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: '${{ github.workspace }}'
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Moses Up
        run: |
          echo "${{ github.workspace }}" >> $GITHUB_PATH
          sudo apt-get update
          sudo apt-get install libexpat1
          wget -O moses-linux.zip https://docs1.toradex.com/111503-moses-linux.zip && unzip moses-linux.zip && mv ./moses/dist/moses-linux ./moses-linux && rm ./moses-linux.zip && rm -fr ./moses
          cd moses-linux
          sudo chmod +x moses
          sudo chmod +x tdskt
          sudo ./moses &
          sleep 15
      - name: EULA Accept
        run: |
          sudo ./moses-linux/tdskt platforms
          sudo ./moses-linux/tdskt eula nxp-la-opt-v5 setprop accepted true
          sudo ./moses-linux/tdskt platforms
      - name: Enable Emulation
        run: |
          ./moses-linux/tdskt -p enableemulation
      - name: Load Application
        run: |
          APPID=$(./moses-linux/tdskt load ./appconfig_0/)
          echo "APPID=$APPID" >> $GITHUB_ENV
      - name: Build SDK Container
        run: |
          ./moses-linux/tdskt -p application ${{ env.APPID }} runsdk release
      - name: Build Application
        run: |
          docker run --rm -t -v ${PWD}:/workspaces/${{ github.event.repository.name }} --env-file ./appconfig_0/containerEnv \
          qtcore_arm32v7-qt5-wayland-no-ssh_bullseye_release_d3f48de8-b79a-4ae4-92b8-4a5bc6168352_sdk_image bash -c "cd /workspaces/${{ github.event.repository.name }} && arm-linux-gnueabihf-qmake CONFIG+=debug && make && make install"
      - name: Run application
        run: |
          ./moses-linux/tdskt -p application ${{ env.APPID }} build release
      -
        name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Push to DockerHub
        run: |
         docker tag qtcore_arm32v7-qt5-wayland-no-ssh_bullseye_release_${{ env.APPID }}:latest ${{ secrets.DOCKERHUB_USERNAME }}/qtcore:latest
         docker push ${{ secrets.DOCKERHUB_USERNAME }}/qtcore:latest
      - name: Publish Application To OTA Server
        run: |
          wget https://raw.githubusercontent.com/toradex/tcb-env-setup/master/tcb-env-setup.sh
          echo "${{ secrets.TORIZON_OTA_CREDENTIALS }}" | base64 -d > credentials.zip
          ls
          source tcb-env-setup.sh -a remote
          torizoncore-builder platform push --credentials credentials.zip --package-name qtCore --package-version qtCore-1.0.1 docker-compose.yml
